<!--

    Copyright (c) 2010, Institute of Telematics (Dennis Pfisterer, Marco Wegner, Dennis Boldt, Sascha Seidel, Joss Widderich), University of Luebeck

    All rights reserved.

    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
    following conditions are met:

    	- Redistributions of source code must retain the above copyright notice, this list of conditions and the following
    	  disclaimer.
    	- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
    	  following disclaimer in the documentation and/or other materials provided with the distribution.
    	- Neither the name of the University of Luebeck nor the names of its contributors may be used to endorse or promote
    	  products derived from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
    GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-->
<!--
  Schema test file for type generator.
-->

<xs:schema xmlns:itm="http://www.itm.uni-luebeck.de/fabrictest" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.itm.uni-luebeck.de/fabrictest" elementFormDefault="qualified" attributeFormDefault="unqualified">

  <!--
    Alias for built-in type xs:string.
  -->
  <xs:simpleType name="MyString">
    <xs:restriction base="xs:string" />
  </xs:simpleType>

  <!--
    Simple type with length restriction.
  -->
  <xs:simpleType name="LengthRestrictedType">
    <xs:restriction base="xs:string">
      <xs:length value="15" />
      <xs:whiteSpace value="preserve" />
    </xs:restriction>
  </xs:simpleType>

  <!--
    Simple type with both inclusive and exclusive boundary.
  -->
  <xs:simpleType name="BoundaryRestrictedType">
    <xs:restriction base="xs:unsignedByte">
      <xs:minExclusive value="127" />
      <xs:maxInclusive value="255" />
    </xs:restriction>
  </xs:simpleType>

  <!--
    Simple type with pattern restriction.
  -->
  <xs:simpleType name="PatternRestrictedType">
    <xs:restriction base="xs:string">
      <xs:length value="6" />
      <xs:pattern value="(SS|WS)20[0-9][0-9]" />
      <xs:whiteSpace value="replace" />
    </xs:restriction>
  </xs:simpleType>

  <!--
    Simple type with digits restriction.
  -->
  <xs:simpleType name="DigitsRestrictedType">
    <xs:restriction base="xs:decimal">
      <xs:totalDigits value="5" />
      <xs:fractionDigits value="2" />
    </xs:restriction>
  </xs:simpleType>

  <!--
    Element of built-in type.
  -->
  <xs:element name="SimpleBuiltIn" type="xs:short" />

  <!--
    Element of top-level simple type.
  -->
  <xs:element name="SimpleLength" type="itm:LengthRestrictedType" />

  <!--
    Another element of a top-level simple type.
  -->
  <xs:element name="SimpleBoundary" type="itm:BoundaryRestrictedType" />

  <!--
    Another element of top-level simple type with pattern and whiteSpace restriction.
  -->
  <xs:element name="Semester" type="itm:PatternRestrictedType" />

  <!--
    And another one with digits restriction.
  -->
  <xs:element name="Price" type="itm:DigitsRestrictedType" />

  <!--
    Element with default value.
  -->
  <xs:element name="SimpleDefault" type="xs:string" default="Foo" />

  <!--
    Element with fixed value.
  -->
  <xs:element name="SimpleFixed" type="xs:string" fixed="Bar" />

  <!--
    Element of a local simple type.
  -->
  <xs:element name="SimpleLocal">
    <xs:simpleType>
      <xs:restriction base="itm:MyString">
        <xs:length value="127" />
      </xs:restriction>
    </xs:simpleType>
  </xs:element>

  <!--
    Element of a local complex type (array elements are of simple types).
  -->
  <xs:element name="Container">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Item01" type="xs:int" minOccurs="3" maxOccurs="7" />
        <xs:element name="Item02" type="xs:byte" maxOccurs="11" />
        <xs:element name="Item03" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
